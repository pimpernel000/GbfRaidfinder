<controls:MetroWindow x:Class="GbfRaidfinder.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:local="clr-namespace:GbfRaidfinder"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:views="clr-namespace:GbfRaidfinder.Views"
                      xmlns:viewModels="clr-namespace:GbfRaidfinder.ViewModels"
                      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                      xmlns:data="clr-namespace:GbfRaidfinder.Data;assembly=GbfRaidfinder.Data"
                      xmlns:tb="http://www.hardcodet.net/taskbar"
                      xmlns:properties="clr-namespace:GbfRaidfinder.Properties"
                      xmlns:dd="urn:gong-wpf-dragdrop"
                      mc:Ignorable="d"
                      Closing="MainWindow_OnClosing"
                      Title="Granblue Fantasy Raidfinder"
                      TextElement.FontWeight="Medium"
                      TextElement.FontSize="14"
                      FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto,Helvetica,Arial"

                      Height="{Binding Source={x:Static properties:Settings.Default},
                               Path=Height}"
                      Width="{Binding Source={x:Static properties:Settings.Default},
                               Path=Width}"
                      TitleCharacterCasing="Normal"
                      NonActiveBorderBrush="Black" NonActiveGlowBrush="Black" BorderThickness="1"
                      NonActiveWindowTitleBrush="{DynamicResource WindowTitleColorBrush}"
                      BorderBrush="{DynamicResource AccentColorBrush}"
                      d:DataContext="{d:DesignInstance {x:Type viewModels:MainViewModel}, IsDesignTimeCreatable=False}">
    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands>
            <Button Command="{Binding StartLoginCommand}">
                Login
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <materialDesign:DialogHost>
        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding IsChecked, ElementName=toggleButton}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <materialDesign:ColorZone Mode="Dark" Padding="4" Margin="0,0,0,4" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Raids" FontSize="24" Grid.Column="0" VerticalAlignment="Center"/>
                            <ToggleButton Grid.Column="2" HorizontalAlignment="Right"
                                          Style="{DynamicResource MaterialDesignHamburgerToggleButton}" 
                                          IsChecked="{Binding IsChecked, ElementName=toggleButton, Mode=TwoWay}">
                            </ToggleButton>
                        </Grid>
                    </materialDesign:ColorZone>
                    <views:RaidBossesView Grid.Row="1" Width="300" DataContext="{Binding RaidListCtx}"/>
                </Grid>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <materialDesign:Transitioner Grid.Column="1" SelectedIndex="{Binding IsChecked, ElementName=toggleButton1}">
                    <views:MainView />
                    <views:InfoView />
                </materialDesign:Transitioner>
                <materialDesign:ColorZone Grid.Column="0" Mode="Dark" VerticalAlignment="Stretch" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="toggleButton" 
                                      Style="{DynamicResource MaterialDesignHamburgerToggleButton}" BorderThickness="1"/>
                        <ToggleButton Grid.Row="1" Height="50" Width="50"
                                      Style="{DynamicResource MaterialDesignActionToggleButton}"
                                      Background="Transparent"
                                      IsChecked="{Binding Settings.GlobalSound}"
                                      Checked="ToggleButton_Click"
                                      Unchecked="ToggleButton_Click"
                                      >
                            <ToggleButton.Content>
                                <materialDesign:PackIcon Kind="BellOutline" Width="30" Height="30"/>
                            </ToggleButton.Content>
                            <materialDesign:ToggleButtonAssist.OnContent>
                                <materialDesign:PackIcon Kind="BellRing" Width="30" Height="30"/>
                            </materialDesign:ToggleButtonAssist.OnContent>
                        </ToggleButton>
                        <ToggleButton Grid.Row="2" Height="50" Width="50"
                                      Style="{DynamicResource MaterialDesignActionToggleButton}"
                                      Background="Transparent"
                                      IsChecked="{Binding Settings.GlobalCopy}"
                                      Checked="ToggleButton2_Click"
                                      Unchecked="ToggleButton2_Click">
                            <ToggleButton.Content>
                                <materialDesign:PackIcon Kind="ClipboardOutline" Width="30" Height="30"/>
                            </ToggleButton.Content>
                            <materialDesign:ToggleButtonAssist.OnContent>
                                <materialDesign:PackIcon Kind="Clipboard" Width="30" Height="30"/>
                            </materialDesign:ToggleButtonAssist.OnContent>
                        </ToggleButton>
                        <ToggleButton x:Name="toggleButton1" Grid.Row="3" Height="50" Width="50" 
                                      Style="{DynamicResource MaterialDesignActionToggleButton}"
                                      VerticalAlignment="Bottom" Background="Transparent">
                            <ToggleButton.Content>
                                <materialDesign:PackIcon Kind="InformationOutline" Width="30" Height="30"/>
                            </ToggleButton.Content>
                            <materialDesign:ToggleButtonAssist.OnContent>
                                <materialDesign:PackIcon Kind="Information" Width="30" Height="30"/>
                            </materialDesign:ToggleButtonAssist.OnContent>
                        </ToggleButton>
                    </Grid>
                </materialDesign:ColorZone>
                <tb:TaskbarIcon Grid.Column="1" IconSource="Assets/testicon.ico" >
                    <tb:TaskbarIcon.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Exit" Click="MenuItem_OnClick"/>
                        </ContextMenu>
                    </tb:TaskbarIcon.ContextMenu>
                </tb:TaskbarIcon>
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</controls:MetroWindow>